{"ast":null,"code":"var _jsxFileName = \"/home/prospa/AWS-solutions-architect-project-demo/aws-mongodb-app/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.message || 'Registration failed'\n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","stringify","data","json","ok","setItem","success","message","register","username","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prospa/AWS-solutions-architect-project-demo/aws-mongodb-app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return { success: true };\n      } else {\n        return { success: false, error: data.message || 'Login failed' };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return { success: true };\n      } else {\n        return { success: false, error: data.message || 'Registration failed' };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}